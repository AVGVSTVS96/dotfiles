# Mouse and clipboard support
set -g mouse on
set-option -g set-clipboard on

# 24-bit color support
set-option -sa terminal-overrides ",xterm*:Tc"

# Yazi passthrough support (fixes terminal response timeout)
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Remap prefix from 'C-b' to 'C-Space'
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# set vi-mode
set-window-option -g mode-keys vi

# Use vim keybindings in copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Open splits and windows in current directory
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Shift+Alt-arrow keys to switch panes
# bind -n S-M-Left select-pane -L
# bind -n S-M-Right select-pane -R
# bind -n S-M-Up select-pane -U
# bind -n S-M-Down select-pane -D

# Alt+arrow keys to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift+[left|right] arrow keys to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Shift+[up|down] arrow keys to switch sessions
bind -n S-Up switch-client -p  
bind -n S-Down switch-client -n
# bind -n S-M-Left switch-client -p
# bind -n S-M-Right switch-client -n

# reload config file
bind r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded"

# Shift+Alt+[h|l] to switch windows
# bind -n M-H previous-window
# bind -n M-L next-window
bind-key -n S-Enter if-shell -F '#{m:*claude*,#{pane_current_command}}' \
  'send-keys "\\enter"' \
  'send-keys Enter'


# Display Popups
# Create new window with name
bind c display-popup \
  -w 15% -h 3 \
  -E 'bash -i -c "read -p \"New window name: \" name; \
                  tmux new-window -c \"#{pane_current_path}\" -n \$name"'

# Create new session with name
bind S display-popup \
  -w 20% -h 5% \
  -E 'bash -i -c "read -p \"Session name: \" name; \
                  tmux new-session -d -s \$name && tmux switch-client -t \$name"'

# Move current window to another session (with fzf)
bind M display-popup -E -w 14% -h 14% "\
  tmux list-sessions -F '#{session_name}' | \
  grep -v \"^$(tmux display-message -p '#S')\$\" | \
  fzf --reverse --header='Move window to session:' \
    --bind 'enter:execute(tmux move-window -t {}:)+accept'"

# Move current pane to another window as vertical split (with fzf)
bind m display-popup -E -w 20% -h 40% "\
  tmux list-windows -a -F '#{session_name}:#{window_index}:#{window_name}' | \
  grep -v \"^$(tmux display-message -p '#S:#I')\" | \
  fzf --reverse --header='Join pane to window:' --delimiter=':' \
    --bind 'enter:execute(tmux join-pane -h -t {1}:{2})+accept' \
    --with-nth='1,2,3' --preview=''"

# Open shell popup
bind \\ display-popup -d '#{pane_current_path}' -w 90% -h 90% -E -T "Shell" "TMUX_POPUP=1 zsh"

# Open yazi in popup
bind \; display-popup -d '#{pane_current_path}' -E -w 90% -h 90% -T "Yazi" "TMUX_POPUP=1 yazi"

# Edit Claude config in Neovim
bind C display-popup -d '/Users/bassimshahidy/.claude' -E -w 90% -h 90% -T "Claude Config" "TMUX_POPUP=1 nvim"

# Edit TMUX config in Neovim
bind T display-popup -d '/Users/bassimshahidy/dotfiles/tmux/.config/tmux' -E -w 90% -h 90% -T "TMUX Config" "TMUX_POPUP=1 nvim"

# Edit LazyVim Neovim config
bind N display-popup -d '/Users/bassimshahidy/Documents/GitHub/nvim' -E -w 90% -h 90% -T "LazyVim Config" "TMUX_POPUP=1 nvim"

# Set TPM plugin install path to XDG_DATA_HOME (outside dotfiles for Stow compatibility)
# set-environment -g TMUX_PLUGIN_MANAGER_PATH "$HOME/.local/share/tmux/plugins"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'avgvstvs96/tokyo-night-tmux' # my fork of tokyo-night-tmux
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'alexwforsythe/tmux-which-key'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'avgvstvs96/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Plugin settings
# set -g @resurrect-strategy-nvim 'persistence'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
# Restore neovim sessions after restoring all tmux sessions, windows, and panes
# set -g @resurrect-hook-post-restore-all 'for pane in $(tmux list-panes -a -F "#{pane_id}" -f "#{==:#{pane_current_command},nvim}"); do sleep 0.5; tmux send-keys -t $pane ":lua require(\"persistence\").load()" Enter; done'
set -g @resurrect-processes '"~claude->claude --continue"'
set -g @resurrect-processes '"~codex->codex resume --last"'

# Show continuum status in status bar (not working with tokyo-night-tmux theme)
# set -g @continuum-status-right-format 'Continuum: #{continuum_status}'
# My theme fork adds the continuum script to status right but not the visual status indicator

# Theme settings
set -g @tokyo-night-tmux_show_datetime 0
set -g @tokyo-night-tmux_show_path 1
set -g @tokyo-night-tmux_path_format relative
set -g @tokyo-night-tmux_window_id_style dsquare
set -g @tokyo-night-tmux_window_id_style dsquare
set -g @tokyo-night-tmux_show_git 0

run '~/.tmux/plugins/tpm/tpm'
